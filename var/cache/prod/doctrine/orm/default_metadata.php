<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__Prodotto__CLASSMETADATA__' => 0,
'App__Entity__NotificationSettings__CLASSMETADATA__' => 1,
'App__Entity__StockEntry__CLASSMETADATA__' => 2,
'App__Entity__Tag__CLASSMETADATA__' => 3,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToManyOwningSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToManyOwningSideMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTableMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTableMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Prodotto',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ProdottoRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'nome' => $o[2],
                        'quantita' => $o[3],
                        'scadenza' => $o[4],
                        'categoria' => $o[5],
                        'colore' => $o[6],
                        'emoji' => $o[7],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nome' => 'nome',
                        'quantita' => 'quantita',
                        'scadenza' => 'scadenza',
                        'categoria' => 'categoria',
                        'colore' => 'colore',
                        'emoji' => 'emoji',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nome' => 'nome',
                        'quantita' => 'quantita',
                        'scadenza' => 'scadenza',
                        'categoria' => 'categoria',
                        'colore' => 'colore',
                        'emoji' => 'emoji',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'prodotto',
                    ],
                ],
                'associationMappings' => [
                    [
                        'stockEntries' => $o[8],
                        'tags' => $o[9],
                    ],
                ],
                'idGenerator' => [
                    $o[13],
                ],
                'name' => [
                    'App\\Entity\\Prodotto',
                    10 => 'prodotto_tag',
                    'prodotto_id',
                    'tag_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'integer',
                    'date',
                    'string',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'nome',
                    'quantita',
                    'scadenza',
                    'categoria',
                    'colore',
                    'emoji',
                ],
                'columnName' => [
                    1 => 'id',
                    'nome',
                    'quantita',
                    'scadenza',
                    'categoria',
                    'colore',
                    'emoji',
                ],
                'length' => [
                    2 => 255,
                    5 => 100,
                    7,
                    8,
                ],
                'nullable' => [
                    4 => true,
                    true,
                    true,
                    true,
                    11 => false,
                    false,
                ],
                'cascade' => [
                    8 => [
                        'remove',
                    ],
                    [
                        'persist',
                    ],
                ],
                'fetch' => [
                    8 => 2,
                    2,
                ],
                'orphanRemoval' => [
                    8 => true,
                ],
                'sourceEntity' => [
                    8 => 'App\\Entity\\Prodotto',
                    'App\\Entity\\Prodotto',
                ],
                'mappedBy' => [
                    8 => 'prodotto',
                ],
                'isOnDeleteCascade' => [
                    9 => true,
                ],
                'joinTable' => [
                    9 => $o[10],
                ],
                'joinTableColumns' => [
                    9 => [
                        'prodotto_id',
                        'tag_id',
                    ],
                ],
                'relationToSourceKeyColumns' => [
                    9 => [
                        'prodotto_id' => 'id',
                    ],
                ],
                'relationToTargetKeyColumns' => [
                    9 => [
                        'tag_id' => 'id',
                    ],
                ],
                'joinColumns' => [
                    10 => [
                        $o[11],
                    ],
                ],
                'inverseJoinColumns' => [
                    10 => [
                        $o[12],
                    ],
                ],
                'onDelete' => [
                    11 => 'CASCADE',
                    'CASCADE',
                ],
                'referencedColumnName' => [
                    11 => 'id',
                    'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    8 => 'stockEntries',
                    'tags',
                ],
                'targetEntity' => [
                    8 => 'App\\Entity\\StockEntry',
                    'App\\Entity\\Tag',
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\NotificationSettings',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'email' => $o[2],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'notification_settings',
                    ],
                ],
                'idGenerator' => [
                    $o[3],
                ],
                'name' => [
                    'App\\Entity\\NotificationSettings',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'email',
                ],
                'columnName' => [
                    1 => 'id',
                    'email',
                ],
                'length' => [
                    2 => 255,
                ],
                'nullable' => [
                    2 => true,
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\StockEntry',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\StockEntryRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'quantita' => $o[2],
                        'scadenza' => $o[3],
                        'posizione' => $o[4],
                        'createdAt' => $o[5],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'quantita' => 'quantita',
                        'scadenza' => 'scadenza',
                        'posizione' => 'posizione',
                        'created_at' => 'createdAt',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'quantita' => 'quantita',
                        'scadenza' => 'scadenza',
                        'posizione' => 'posizione',
                        'createdAt' => 'created_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'stock_entry',
                    ],
                ],
                'associationMappings' => [
                    [
                        'prodotto' => $o[6],
                    ],
                ],
                'idGenerator' => [
                    $o[8],
                ],
                'name' => [
                    'App\\Entity\\StockEntry',
                    7 => 'prodotto_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'integer',
                    'datetime',
                    'string',
                    'datetime',
                ],
                'fieldName' => [
                    1 => 'id',
                    'quantita',
                    'scadenza',
                    'posizione',
                    'createdAt',
                ],
                'columnName' => [
                    1 => 'id',
                    'quantita',
                    'scadenza',
                    'posizione',
                    'created_at',
                ],
                'nullable' => [
                    3 => true,
                    true,
                    7 => false,
                ],
                'length' => [
                    4 => 100,
                ],
                'fetch' => [
                    6 => 2,
                ],
                'sourceEntity' => [
                    6 => 'App\\Entity\\StockEntry',
                ],
                'inversedBy' => [
                    6 => 'stockEntries',
                ],
                'sourceToTargetKeyColumns' => [
                    6 => [
                        'prodotto_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    6 => [
                        'id' => 'prodotto_id',
                    ],
                ],
                'joinColumns' => [
                    6 => [
                        $o[7],
                    ],
                ],
                'joinColumnFieldNames' => [
                    6 => [
                        'prodotto_id' => 'prodotto_id',
                    ],
                ],
                'deferrable' => [
                    7 => false,
                ],
                'unique' => [
                    7 => false,
                ],
                'onDelete' => [
                    7 => 'CASCADE',
                ],
                'referencedColumnName' => [
                    7 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    6 => 'prodotto',
                ],
                'targetEntity' => [
                    6 => 'App\\Entity\\Prodotto',
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Tag',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'tag',
                    ],
                ],
                'idGenerator' => [
                    $o[3],
                ],
                'name' => [
                    'App\\Entity\\Tag',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'name',
                ],
                'columnName' => [
                    1 => 'id',
                    'name',
                ],
                'length' => [
                    2 => 80,
                ],
                'unique' => [
                    2 => true,
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
